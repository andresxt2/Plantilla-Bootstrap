*{font-size: 20px;
text-align: center;
box-sizing: border-box;}

/*
ESTO DEPENDE DE FLEX DIRECTION: EL MAIN AXIXS Y CROSS CAMBIAN DEPENDIENDO DE ESTO
justify content: main axis x, align items cross axis y

-- space evenly: mismo espacio proporcional*/

/*justify content: (define los elementos del eje principal, la define
flex direction de eso depende)main axis x, align items cross axis y*/
.contendor{
    height: 400px; 
    width: 100%;
    border: 3px solid red;
    display: flex;    
    flex-wrap: wrap;
    flex-direction: row;
    flex-flow: row nowrap;   
    justify-content: flex-start;
    margin-bottom: 20px;
    /*Trabaja de manera independiente por cada fila 
    o columna que tengamos*/
    align-items: stretch; /* Define la alineaci칩n de los hijos en 
    eje transversal: cross-axis*/
    /* stretch|flexstart|flex-end|baseline|center*/

    /*Alinear los elementos hijos como un todo
    - No sirve cuando los hijos est치n en una sola linea (nowrap)
    solo funciona con wrap*/
    align-content: flex-start;


}
/*Stretch solo sirve cuando al item no se le pone width height*/




.caja{
 /*   width: 20%;
    height: 20%;*/
    border: 3px solid;
    padding: 0px;
    margin-top: 10px;
    background: blueviolet;

        /*Cuando la caja flexbox tenga espacio sobrante, es la habilidad o el factor
    de crecer , valor por defecto: 0, no se aceptan valores negativos*/
    flex-grow: 0;

        /*Cuando la caja flexbox NO tenga espacio sobrante, es la habilidad o el 
        factor de encogerse , valor por defecto: 1, no se aceptan valores negativos*/
    flex-shrink: 1;

    /*Es el tamanio del elemento hijo dentro de la linea de la caja
    flexbox 
    Si la caja flexbox tiene direccion de fila, flex-basis representa width
    Si tiene columna flex-basis representa height
    Valor por defecto: auto;
    CUANDO SE USA FLEXBOX flexbasis tiene mas relevancia que width o height 
    */
   flex-basis: auto;
    flex-basis: 100px;


    flex: 1 1 auto;
    /*short hand de estasa 3 propiedades: orden: flex-grow flex-shrink y flex-basis*/


    order:0;

    /*Representa el orden que tendr치n los elementos hijos
    en la caja flexbox 
    Valor por defecto 0
    Se aceptan valores positivos y negativos
    Un valor menor siempre ir치 antes que un valor mayor
    */

    align-self: stretch;
    /* Permite cambiar el orden en cross axis
    Sobreescribe el valor de la propiedad align-items solo para 
    el elemento hijo especificado 
    */
}

.caja:nth-child(2) {
    /*flex-grow: 0;*/
   /* flex-shrink: 2;*/
   order: 1;
}


.caja:nth-child(3) {
    /*flex-grow: 0;*/
    align-self: flex-end; /*y si es row*/
}

/*
*{font-size: 40px;
text-align: center;
box-sizing: border-box;}


.contendor{
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(220px,1fr));
    place-content: center   ;
}

.caja{
    margin: auto;
    width: 200px;
    height: 200px;
    border: 3px solid;
    padding: 0px;
    margin-top: 10px;
    background: blueviolet;
}*/